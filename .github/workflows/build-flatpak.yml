# SPDX-FileCopyrightText: 2022 Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>
#
# SPDX-License-Identifier: MIT

name: CI

on:
  workflow_call:
    inputs:
      output_name:
        type: string
        required: true
      kde_platform_version:
        type: string
        default: "5.14"
        required: false

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  flatpak:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install flatpak flatpak-builder
      - name: Install Flatpak KDE SDK
        run: |
          set -x
          sudo flatpak remote-add --system --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo
          sudo flatpak install --system -y flathub org.kde.Platform//${{ inputs.kde_platform_version }}
          sudo flatpak install --system -y flathub org.kde.Sdk//${{ inputs.kde_platform_version }}
      - name: Build the Flatpak package
        run: |
          set -x
          outdir=$(pwd)/github-release-artifacts
          mkdir $outdir
          pushd dist/flatpak
          # We are not using YAML for the manifest because Ubuntu 18.04 has an older flatpak that only supports JSON
          sudo flatpak-builder --repo=flatpak-repo --force-clean --subject="Build of ${{ inputs.output_name }} at $(LC_ALL=C date +'%Y-%m-%d %H:%M:%S')" flatpak-build ${{ inputs.output_name }}.json
          flatpak build-bundle flatpak-repo $outdir/${{ inputs.output_name }}.flatpak ${{ inputs.output_name }}
          popd
      - name: Archive result
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: Flatpak
          path: github-release-artifacts/

  release:
    if: "!contains(github.event.head_commit.message, 'ci skip') && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')"
    runs-on: ubuntu-latest
    needs:
      - flatpak
    steps:
      - uses: actions/checkout@v2
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: Fill the release notes
          draft: true
          prerelease: false
      - name: Download Flatpak artifact
        uses: actions/download-artifact@v1
        with:
          name: Flatpak
      - name: Upload Flatpak artifact to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: github-release-artifacts/${{ inputs.output_name }}.flatpak
          asset_name: ${{ inputs.output_name }}.flatpak
          asset_content_type: application/octet-stream
